<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.trade.dao.UsersMapper" >
  <resultMap id="BaseResultMap" type="org.trade.entity.Users" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="rid" property="rid" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="money" property="money" jdbcType="DECIMAL" />
    <result column="freeze_money" property="freezeMoney" jdbcType="DECIMAL" />
    <result column="freeze_money2" property="freezeMoney2" jdbcType="DECIMAL" />
    <result column="sno" property="sno" jdbcType="INTEGER" />
    <association property="role" column="rid" select="selectByUsersId">

    </association>
  </resultMap>

  <sql id="Base_Column_List" >
    id, rid, username, password, name, money, freeze_money, freeze_money2,sno
  </sql>
  <select id="selectByUsersId" resultType="org.trade.entity.Role">
    select *from role where id=#{rid}
  </select>
  <select id="login" resultMap="BaseResultMap">
    select *from users where username=#{username} and password=#{password}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from users
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from users
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.trade.entity.Users" >
    insert into users (id, rid, username,
    password, name, money,
    freeze_money)
    values (#{id,jdbcType=INTEGER}, #{rid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR},
    #{password,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{money,jdbcType=DECIMAL},
    #{freezeMoney,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="org.trade.entity.Users" >
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="rid != null" >
        rid,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="freezeMoney != null" >
        freeze_money,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="rid != null" >
        #{rid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="freezeMoney != null" >
        #{freezeMoney,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.trade.entity.Users" >
    update users
    <set >
      <if test="rid != null" >
        rid = #{rid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="freezeMoney != null" >
        freeze_money = #{freezeMoney,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.trade.entity.Users" >
    update users
    set rid = #{rid,jdbcType=INTEGER},
    username = #{username,jdbcType=VARCHAR},
    password = #{password,jdbcType=VARCHAR},
    name = #{name,jdbcType=VARCHAR},
    money = #{money,jdbcType=DECIMAL},
    freeze_money = #{freezeMoney,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateMoney">
    update users
    set money=#{money},
    freeze_money = #{freezeMoney}
    where id=#{id}
  </update>
  <update id="updateMoney2">
    update users
    set money=#{money},
    freeze_money2 = #{freezeMoney2}
    where id=#{id}
  </update>
  <update id="updateSome">

    <foreach collection="list" item="list" index="index" separator=";">
      update users set money=#{list.money},freeze_money=#{list.freezeMoney} where id=#{list.id}
    </foreach>

  </update>
</mapper>